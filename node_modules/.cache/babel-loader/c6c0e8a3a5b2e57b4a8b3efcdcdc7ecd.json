{"ast":null,"code":"var _jsxFileName = \"/Users/celestegerard/Development/code/celesteneue/chiketto_f/src/components/Login.js\";\nimport React from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nconst clientId = '1037231150604-hhea5b41gh6e99d24vnhuko4ik5n9mk2.apps.googleusercontent.com';\nconst parentURL = \"http://localhost:3000/api/v1/parents\";\nconst prizeURL = \"http://localhost:3000/api/v1/prizes\";\nconst userURL = \"http://localhost:3000/api/v1/users\";\nlet parents = [];\nlet parentnames = [];\n\nfunction Login(parentid) {\n  const yep = res => {\n    {\n      parentid.onLoginClick(parentid);\n    }\n    fetch(parentURL).then(res => res.json()).then(data => parents = data);\n    parents.map(parent => parentnames = [...parentnames, parent.name]);\n    parentnames.includes(res.profileObj.name) ? parentid = {\n      parentid: 2\n    } : console.log('wo!');\n    console.log(parentid.parentid);\n    console.log(parentid); // const postParent = async () => {\n    //   const res = await fetch( parentURL, { method: 'POST', body: parent })\n    //   const json = await res.json()\n    //   const loadres = await Promise.all([ fetch( prizeURL ), fetch( userURL )]), fetch( parentURL )])\n    //   // const loadjson = await Promise.all(loadres.map(r => r.json()))\n    //   // const state = await this.setState({ prizes: loadjson[0], users: loadjson[1], parents: loadjson[2] })\n    // }\n    // // postParent()\n  };\n\n  const onFailure = res => {\n    console.log('[Login failed] res:', res);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: clientId,\n    buttonText: \"Login\",\n    onSuccess: yep,\n    onFailure: onFailure,\n    className: \"Login\",\n    isSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Login; // onChange={parentid.onLoginClick(parentid)}","map":{"version":3,"sources":["/Users/celestegerard/Development/code/celesteneue/chiketto_f/src/components/Login.js"],"names":["React","GoogleLogin","clientId","parentURL","prizeURL","userURL","parents","parentnames","Login","parentid","yep","res","onLoginClick","fetch","then","json","data","map","parent","name","includes","profileObj","console","log","onFailure"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,MAAMC,QAAQ,GAAG,2EAAjB;AACA,MAAMC,SAAS,GAAG,sCAAlB;AACA,MAAMC,QAAQ,GAAG,qCAAjB;AACA,MAAMC,OAAO,GAAG,oCAAhB;AAEA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,SAASC,KAAT,CAAeC,QAAf,EAAyB;AAErB,QAAMC,GAAG,GAAIC,GAAD,IAAS;AAEnB;AAACF,MAAAA,QAAQ,CAACG,YAAT,CAAsBH,QAAtB;AAAgC;AAEjCI,IAAAA,KAAK,CAAEV,SAAF,CAAL,CACCW,IADD,CACMH,GAAG,IAAIA,GAAG,CAACI,IAAJ,EADb,EAECD,IAFD,CAEME,IAAI,IAAIV,OAAO,GAAGU,IAFxB;AAIAV,IAAAA,OAAO,CAACW,GAAR,CAAYC,MAAM,IAAIX,WAAW,GAAG,CAAC,GAAGA,WAAJ,EAAiBW,MAAM,CAACC,IAAxB,CAApC;AACAZ,IAAAA,WAAW,CAACa,QAAZ,CAAqBT,GAAG,CAACU,UAAJ,CAAeF,IAApC,IAA4CV,QAAQ,GAAG;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAvD,GAAyEa,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAzE;AAGAD,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACA,QAArB;AACEa,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ,EAbiB,CAenB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GAxBD;;AA2BA,QAAMe,SAAS,GAAKb,GAAF,IAAW;AAC3BW,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCZ,GAAnC;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AACA,IAAA,QAAQ,EAAET,QADV;AAEA,IAAA,UAAU,EAAC,OAFX;AAGA,IAAA,SAAS,EAAEQ,GAHX;AAIA,IAAA,SAAS,EAAEc,SAJX;AAMA,IAAA,SAAS,EAAC,OANV;AAOA,IAAA,UAAU,EAAE,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAaD;;AAGH,eAAehB,KAAf,C,CAEA","sourcesContent":["import React from \"react\";\nimport { GoogleLogin } from 'react-google-login';\n\nconst clientId = '1037231150604-hhea5b41gh6e99d24vnhuko4ik5n9mk2.apps.googleusercontent.com'\nconst parentURL = \"http://localhost:3000/api/v1/parents\"\nconst prizeURL = \"http://localhost:3000/api/v1/prizes\"\nconst userURL = \"http://localhost:3000/api/v1/users\"\n\nlet parents = []\nlet parentnames = []\n\nfunction Login(parentid) {\n\n    const yep = (res) => {\n\n      {parentid.onLoginClick(parentid)}\n\n      fetch( parentURL )\n      .then(res => res.json())\n      .then(data => parents = data)\n\n      parents.map(parent => parentnames = [...parentnames, parent.name] )\n      parentnames.includes(res.profileObj.name) ? parentid = { parentid: 2 } : console.log('wo!')\n\n\n      console.log(parentid.parentid)\n        console.log(parentid)\n\n      // const postParent = async () => {\n      //   const res = await fetch( parentURL, { method: 'POST', body: parent })\n      //   const json = await res.json()\n      //   const loadres = await Promise.all([ fetch( prizeURL ), fetch( userURL )]), fetch( parentURL )])\n      //   // const loadjson = await Promise.all(loadres.map(r => r.json()))\n      //   // const state = await this.setState({ prizes: loadjson[0], users: loadjson[1], parents: loadjson[2] })\n      // }\n      // // postParent()\n\n    }\n\n\n    const onFailure = ( res ) => {\n      console.log('[Login failed] res:', res)\n    }\n\n    return (\n      <div>\n      <GoogleLogin\n      clientId={clientId}\n      buttonText=\"Login\"\n      onSuccess={yep}\n      onFailure={onFailure}\n\n      className=\"Login\"\n      isSignedIn={true}\n      />\n      </div>\n    )\n  }\n\n\nexport default Login;\n\n// onChange={parentid.onLoginClick(parentid)}\n"]},"metadata":{},"sourceType":"module"}