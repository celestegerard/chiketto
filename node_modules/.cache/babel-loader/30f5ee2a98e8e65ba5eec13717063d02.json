{"ast":null,"code":"var _jsxFileName = \"/Users/celestegerard/Development/code/celesteneue/chiketto_f/src/components/Login.js\";\nimport React from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nconst clientId = '1037231150604-hhea5b41gh6e99d24vnhuko4ik5n9mk2.apps.googleusercontent.com';\nconst parentURL = \"http://localhost:3000/api/v1/parents\";\nconst prizeURL = \"http://localhost:3000/api/v1/prizes\";\nconst userURL = \"http://localhost:3000/api/v1/users\"; // function Login() {\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.yep = props => {\n      // const parent = new FormData();\n      // parent.append('name', res.profileObj.name);\n      // parent.append('googleid', res.profileObj.googleId);\n      // parent.append('avatar', res.profileObj.imageUrl);\n      // const postParent = async () => {\n      //   const res = await fetch( parentURL, { method: 'POST', body: parent })\n      //   const json = await res.json()\n      //   const loadres = await Promise.all([ fetch( prizeURL ), fetch( userURL )]), fetch( parentURL )])\n      //   // const loadjson = await Promise.all(loadres.map(r => r.json()))\n      //   // const state = await this.setState({ prizes: loadjson[0], users: loadjson[1], parents: loadjson[2] })\n      // }\n      // // postParent()\n      console.log(\"YEW\");\n    };\n\n    this.onFailure = res => {\n      console.log('[Login failed] res:', res);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Login\",\n      onSuccess: yep,\n      onFailure: onFailure,\n      cookiePolicy: 'single_host_origin',\n      className: \"Login\",\n      isSignedIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/celestegerard/Development/code/celesteneue/chiketto_f/src/components/Login.js"],"names":["React","GoogleLogin","clientId","parentURL","prizeURL","userURL","Login","Component","yep","props","console","log","onFailure","res","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,MAAMC,QAAQ,GAAG,2EAAjB;AACA,MAAMC,SAAS,GAAG,sCAAlB;AACA,MAAMC,QAAQ,GAAG,qCAAjB;AACA,MAAMC,OAAO,GAAG,oCAAhB,C,CAGA;;AAEA,MAAMC,KAAN,SAAoBC,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAE1BC,GAF0B,GAEnBC,KAAD,IAAW;AAEf;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,KApByB;;AAAA,SAsB1BC,SAtB0B,GAsBZC,GAAF,IAAW;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,GAAnC;AACD,KAxByB;AAAA;;AA0B1BC,EAAAA,MAAM,GAAG;AAET,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,WAAD;AACA,MAAA,QAAQ,EAAEZ,QADV;AAEA,MAAA,UAAU,EAAC,OAFX;AAGA,MAAA,SAAS,EAAEM,GAHX;AAIA,MAAA,SAAS,EAAEI,SAJX;AAKA,MAAA,YAAY,EAAE,oBALd;AAMA,MAAA,SAAS,EAAC,OANV;AAOA,MAAA,UAAU,EAAE,IAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAaD;;AAzC2B;;AA6C9B,eAAeN,KAAf","sourcesContent":["import React from \"react\";\nimport { GoogleLogin } from 'react-google-login';\n\nconst clientId = '1037231150604-hhea5b41gh6e99d24vnhuko4ik5n9mk2.apps.googleusercontent.com'\nconst parentURL = \"http://localhost:3000/api/v1/parents\"\nconst prizeURL = \"http://localhost:3000/api/v1/prizes\"\nconst userURL = \"http://localhost:3000/api/v1/users\"\n\n\n// function Login() {\n\nclass Login extends Component {\n\n    yep = (props) => {\n\n      // const parent = new FormData();\n      // parent.append('name', res.profileObj.name);\n      // parent.append('googleid', res.profileObj.googleId);\n      // parent.append('avatar', res.profileObj.imageUrl);\n\n\n      // const postParent = async () => {\n      //   const res = await fetch( parentURL, { method: 'POST', body: parent })\n      //   const json = await res.json()\n      //   const loadres = await Promise.all([ fetch( prizeURL ), fetch( userURL )]), fetch( parentURL )])\n      //   // const loadjson = await Promise.all(loadres.map(r => r.json()))\n      //   // const state = await this.setState({ prizes: loadjson[0], users: loadjson[1], parents: loadjson[2] })\n      // }\n      // // postParent()\n\n      console.log(\"YEW\")\n    }\n\n    onFailure = ( res ) => {\n      console.log('[Login failed] res:', res)\n    }\n\n    render() {\n\n    return (\n      <div>\n      <GoogleLogin\n      clientId={clientId}\n      buttonText=\"Login\"\n      onSuccess={yep}\n      onFailure={onFailure}\n      cookiePolicy={'single_host_origin'}\n      className=\"Login\"\n      isSignedIn={true}\n      />\n      </div>\n    )\n  }\n}\n\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}