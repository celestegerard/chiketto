{"ast":null,"code":"var _jsxFileName = \"/Users/celestegerard/Development/code/celesteneue/chiketto_f/src/components/Login.js\";\nimport React from \"react\";\nimport { GoogleLogin } from 'react-google-login';\nconst clientId = '1037231150604-hhea5b41gh6e99d24vnhuko4ik5n9mk2.apps.googleusercontent.com';\nconst parentURL = \"http://localhost:3000/api/v1/parents\";\nconst prizeURL = \"http://localhost:3000/api/v1/prizes\";\nconst userURL = \"http://localhost:3000/api/v1/users\";\nlet parents = [];\nlet parentnames = [];\n\nfunction Login(parent) {\n  const yep = res => {\n    fetch(parentURL).then(res => res.json()).then(data => parents = data);\n\n    const setParentId = async () => {\n      console.log(\"parent id gonna be set here!\");\n    };\n\n    parents.map(parent => parentnames = [...parentnames, parent.name]);\n    parentnames.includes(res.profileObj.name) ? postParent() : console.log('wo!');\n    console.log(parent.loginparentid);\n\n    const postParent = async () => {\n      const res = await fetch(parentURL, {\n        method: 'GET'\n      });\n      const json = await res.json();\n      console.log(json); // const loadres = await Promise.all([ fetch( prizeURL ), fetch( userURL )]), fetch( parentURL )])\n      // const loadjson = await Promise.all(loadres.map(r => r.json()))\n      // const state = await this.setState({ prizes: loadjson[0], users: loadjson[1], parents: loadjson[2] })\n    };\n\n    postParent();\n  };\n\n  const onFailure = res => {\n    console.log('[Login failed] res:', res);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: clientId,\n    buttonText: \"Login\",\n    onSuccess: yep,\n    onFailure: onFailure,\n    className: \"Login\",\n    isSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Login; // onChange={parentid.onLoginClick(parentid)}\n// onClick={parentid.onLoginClick(parentid)}","map":{"version":3,"sources":["/Users/celestegerard/Development/code/celesteneue/chiketto_f/src/components/Login.js"],"names":["React","GoogleLogin","clientId","parentURL","prizeURL","userURL","parents","parentnames","Login","parent","yep","res","fetch","then","json","data","setParentId","console","log","map","name","includes","profileObj","postParent","loginparentid","method","onFailure"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,MAAMC,QAAQ,GAAG,2EAAjB;AACA,MAAMC,SAAS,GAAG,sCAAlB;AACA,MAAMC,QAAQ,GAAG,qCAAjB;AACA,MAAMC,OAAO,GAAG,oCAAhB;AAEA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,SAASC,KAAT,CAAeC,MAAf,EAAuB;AAEnB,QAAMC,GAAG,GAAIC,GAAD,IAAS;AAEnBC,IAAAA,KAAK,CAAET,SAAF,CAAL,CACCU,IADD,CACMF,GAAG,IAAIA,GAAG,CAACG,IAAJ,EADb,EAECD,IAFD,CAEME,IAAI,IAAIT,OAAO,GAAGS,IAFxB;;AAIA,UAAMC,WAAW,GAAG,YAAY;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KAFD;;AAIAZ,IAAAA,OAAO,CAACa,GAAR,CAAYV,MAAM,IAAIF,WAAW,GAAG,CAAC,GAAGA,WAAJ,EAAiBE,MAAM,CAACW,IAAxB,CAApC;AACAb,IAAAA,WAAW,CAACc,QAAZ,CAAqBV,GAAG,CAACW,UAAJ,CAAeF,IAApC,IAA4CG,UAAU,EAAtD,GAA2DN,OAAO,CAACC,GAAR,CAAY,KAAZ,CAA3D;AAEND,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACe,aAAnB;;AAEM,UAAMD,UAAU,GAAG,YAAY;AAC7B,YAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAET,SAAF,EAAa;AAAEsB,QAAAA,MAAM,EAAE;AAAV,OAAb,CAAvB;AACA,YAAMX,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAJ,EAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAH6B,CAI7B;AACA;AACA;AACD,KAPD;;AAQAS,IAAAA,UAAU;AAEX,GAzBD;;AA4BA,QAAMG,SAAS,GAAKf,GAAF,IAAW;AAC3BM,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCP,GAAnC;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AACA,IAAA,QAAQ,EAAET,QADV;AAEA,IAAA,UAAU,EAAC,OAFX;AAGA,IAAA,SAAS,EAAEQ,GAHX;AAIA,IAAA,SAAS,EAAEgB,SAJX;AAKA,IAAA,SAAS,EAAC,OALV;AAMA,IAAA,UAAU,EAAE,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAYD;;AAGH,eAAelB,KAAf,C,CAEA;AACA","sourcesContent":["import React from \"react\";\nimport { GoogleLogin } from 'react-google-login';\n\nconst clientId = '1037231150604-hhea5b41gh6e99d24vnhuko4ik5n9mk2.apps.googleusercontent.com'\nconst parentURL = \"http://localhost:3000/api/v1/parents\"\nconst prizeURL = \"http://localhost:3000/api/v1/prizes\"\nconst userURL = \"http://localhost:3000/api/v1/users\"\n\nlet parents = []\nlet parentnames = []\n\nfunction Login(parent) {\n\n    const yep = (res) => {\n\n      fetch( parentURL )\n      .then(res => res.json())\n      .then(data => parents = data)\n\n      const setParentId = async () => {\n        console.log(\"parent id gonna be set here!\")\n      }\n\n      parents.map(parent => parentnames = [...parentnames, parent.name] )\n      parentnames.includes(res.profileObj.name) ? postParent() : console.log('wo!')\n\nconsole.log(parent.loginparentid)\n\n      const postParent = async () => {\n        const res = await fetch( parentURL, { method: 'GET' })\n        const json = await res.json()\n        console.log(json)\n        // const loadres = await Promise.all([ fetch( prizeURL ), fetch( userURL )]), fetch( parentURL )])\n        // const loadjson = await Promise.all(loadres.map(r => r.json()))\n        // const state = await this.setState({ prizes: loadjson[0], users: loadjson[1], parents: loadjson[2] })\n      }\n      postParent()\n\n    }\n\n\n    const onFailure = ( res ) => {\n      console.log('[Login failed] res:', res)\n    }\n\n    return (\n      <div>\n      <GoogleLogin\n      clientId={clientId}\n      buttonText=\"Login\"\n      onSuccess={yep}\n      onFailure={onFailure}\n      className=\"Login\"\n      isSignedIn={true}\n      />\n      </div>\n    )\n  }\n\n\nexport default Login;\n\n// onChange={parentid.onLoginClick(parentid)}\n// onClick={parentid.onLoginClick(parentid)}\n"]},"metadata":{},"sourceType":"module"}